[{"question": "sort json `ips_data` by a key 'data_two'", "truth": "sorted_list_of_keyvalues = sorted(list(ips_data.items()), key=item[1]['data_two'])"}, {"question": "What's the best way to search for a Python dictionary value in a list of dictionaries?", "truth": "any(d['site'] == 'Superuser' for d in data)"}, {"question": "Get all the second values from a list of lists `A`", "truth": "[row[1] for row in A]"}, {"question": "decode url-encoded string `some_string` to its character equivalents", "truth": "urllib.parse.unquote(urllib.parse.unquote(some_string))"}, {"question": "append string `foo` to list `list`", "truth": "list.append('foo')"}, {"question": "access an arbitrary value from dictionary `dict`", "truth": "next(iter(list(dict.values())))"}, {"question": "Calling an external command \"ls -l\"", "truth": "from subprocess import call"}, {"question": "convert string of bytes `y\\xcc\\xa6\\xbb` into an int", "truth": "struct.unpack('<L', 'y\\xcc\\xa6\\xbb')[0]"}, {"question": "sort a list `L` by number after second '.'", "truth": "print(sorted(L, key=lambda x: int(x.split('.')[2])))"}, {"question": "round number 3.0005 up to 3 decimal places", "truth": "round(3.0005, 3)"}, {"question": "sort a dictionary `y` by value then by key", "truth": "sorted(list(y.items()), key=lambda x: (x[1], x[0]), reverse=True)"}, {"question": "align values in array `b` to the order of corresponding values in array `a`", "truth": "a[np.in1d(a, b)]"}, {"question": "unpack the arguments out of list `params` to function `some_func`", "truth": "some_func(*params)"}, {"question": "get the ASCII value of a character u'\u3042' as an int", "truth": "ord('\\u3042')"}, {"question": "generate unique equal hash for equal dictionaries `a` and `b`", "truth": "hash(pformat(a)) == hash(pformat(b))"}, {"question": "merge pandas dataframe `x` with columns 'a' and 'b' and dataframe `y` with column 'y'", "truth": "pd.merge(y, x, on='k')[['a', 'b', 'y']]"}, {"question": "converting string '(1,2,3,4)' to a tuple", "truth": "ast.literal_eval('(1,2,3,4)')"}, {"question": "Divide elements in list `a` from elements at the same index in list `b`", "truth": "[(x / y) for x, y in zip(a, b)]"}, {"question": "remove a substring \".com\" from the end of string `url`", "truth": "if url.endswith('.com'):\n    url = url[:(-4)]"}, {"question": "execute raw sql queue '<sql here>' in database `db` in sqlalchemy-flask app", "truth": "result = db.engine.execute('<sql here>')"}, {"question": "list all files of a directory `mypath`", "truth": "f = []\nfor (dirpath, dirnames, filenames) in walk(mypath):\n    f.extend(filenames)\n    break"}, {"question": "list all files in a current directory", "truth": "glob.glob('*')"}, {"question": "create a list containing the subtraction of each item in list `L` from the item prior to it", "truth": "[(y - x) for x, y in zip(L, L[1:])]"}, {"question": "abort the execution of a python script", "truth": "sys.exit()"}, {"question": "make a list of integers from 0 to `5` where each second element is a duplicate of the previous element", "truth": "print([u for v in [[i, i] for i in range(5)] for u in v])"}, {"question": "Get all the values in key `gold` summed from a list of dictionary `myLIst`", "truth": "sum(item['gold'] for item in myLIst)"}, {"question": "Copy list `old_list` and name it `new_list`", "truth": "new_list = [x[:] for x in old_list]"}, {"question": "create a list containing all values associated with key 'baz' in dictionaries of list `foos` using list comprehension", "truth": "[y['baz'] for x in foos for y in x['bar']]"}, {"question": "Find all words containing letters between A and Z in string `formula`", "truth": "re.findall('\\\\b[A-Z]', formula)"}, {"question": "convert binary string '010101' to integer", "truth": "int('010101', 2)"}, {"question": "extract folder path from file path", "truth": "os.path.dirname(os.path.abspath(existGDBPath))"}, {"question": "split string `s` to list conversion by ','", "truth": "[x.strip() for x in s.split(',')]"}, {"question": "find all the rows in Dataframe 'df2' that are also present in Dataframe 'df1', for the columns 'A', 'B', 'C' and 'D'.", "truth": "pd.merge(df1, df2, on=['A', 'B', 'C', 'D'], how='inner')"}, {"question": "select the last business day of the month for each month in 2014 in pandas", "truth": "pd.date_range('1/1/2014', periods=12, freq='BM')"}, {"question": "Change data type of data in column 'grade' of dataframe `data_df` into float and then to int", "truth": "data_df['grade'] = data_df['grade'].astype(float).astype(int)"}, {"question": "generate a random number in 1 to 7 with a given distribution [0.1, 0.05, 0.05, 0.2, 0.4, 0.2]", "truth": "numpy.random.choice(numpy.arange(1, 7), p=[0.1, 0.05, 0.05, 0.2, 0.4, 0.2])"}, {"question": "get data of column 'A' and column 'B' in dataframe `df` where column 'A' is equal to 'foo'", "truth": "df.loc[gb.groups['foo'], ('A', 'B')]"}, {"question": "generate a random string of length `x`  containing lower cased ASCII letters", "truth": "\"\"\"\"\"\".join(random.choice(string.lowercase) for x in range(X))"}, {"question": "find all occurrences of a substring in a string", "truth": "[m.start() for m in re.finditer('test', 'test test test test')]"}, {"question": "sum of squares values in a list `l`", "truth": "sum(i * i for i in l)"}, {"question": "add one day and three hours to the present time from datetime.now()", "truth": "datetime.datetime.now() + datetime.timedelta(days=1, hours=3)"}, {"question": "Create a dictionary `d` from list of key value pairs `iterable`", "truth": "d = {k: v for (k, v) in iterable}"}, {"question": "create a regular expression object with a pattern that will match nothing", "truth": "re.compile('a^')"}, {"question": "django redirect to view 'Home.views.index'", "truth": "redirect('Home.views.index')"}, {"question": "print two numbers `10` and `20` using string formatting", "truth": "\"\"\"{0} {1}\"\"\".format(10, 20)"}, {"question": "insert 77 to index 2 of list `x`", "truth": "x.insert(2, 77)"}, {"question": "Check if key 'key1' in `dict`", "truth": "('key1' in dict)"}, {"question": "convert nan values to \u2018n/a\u2019 while reading rows from a csv `read_csv` with pandas", "truth": "df = pd.read_csv('my.csv', na_values=['n/a'])"}, {"question": "check if the third element of all the lists in a list \"items\" is equal to zero.", "truth": "any(item[2] == 0 for item in items)"}, {"question": "find the index of sub string 'cc' in string 'sdfasdf'", "truth": "'sdfasdf'.index('cc')"}, {"question": "Check whether a numpy array `a` contains a given row `[1, 2]`", "truth": "any(np.equal(a, [1, 2]).all(1))"}, {"question": "create a pandas data frame from list of nested dictionaries `my_list`", "truth": "pd.concat([pd.DataFrame(l) for l in my_list], axis=1).T"}, {"question": "plot point marker '.' on series `ts`", "truth": "ts.plot(marker='.')"}, {"question": "Extract values not equal to 0 from numpy array `a`", "truth": "a[a != 0]"}, {"question": "Delete mulitple columns `columnheading1`, `columnheading2` in pandas data frame `yourdf`", "truth": "yourdf.drop(['columnheading1', 'columnheading2'], axis=1, inplace=True)"}, {"question": "remove all instances of [1, 1] from list `a`", "truth": "a[:] = [x for x in a if x != [1, 1]]"}, {"question": "find the index of the second occurrence of the substring `bar` in string `foo bar bar bar`", "truth": "\"\"\"foo bar bar bar\"\"\".replace('bar', 'XXX', 1).find('bar')"}, {"question": "duplicate data in pandas dataframe `x` for 5 times", "truth": "pd.concat([x] * 5, ignore_index=True)"}, {"question": "sorting a defaultdict `d` by value", "truth": "sorted(list(d.items()), key=lambda k_v: k_v[1])"}, {"question": "close the window in tkinter", "truth": "self.root.destroy()"}, {"question": "converting integer `num` to list", "truth": "[int(x) for x in str(num)]"}, {"question": "convert the elements of list `L` from hex byte strings to hex integers", "truth": "[int(x, 16) for x in L]"}, {"question": "create a dictionary of pairs from a list of tuples `myListOfTuples`", "truth": "dict(x[1:] for x in reversed(myListOfTuples))"}, {"question": "convert a list of characters `['a', 'b', 'c', 'd']` into a string", "truth": "\"\"\"\"\"\".join(['a', 'b', 'c', 'd'])"}, {"question": "move last item of array `a` to the first position", "truth": "a[-1:] + a[:-1]"}, {"question": "python sum of ascii values of all characters in a string `string`", "truth": "sum(map(ord, string))"}, {"question": "extract table data from table `rows` using beautifulsoup", "truth": "[[td.findNext(text=True) for td in tr.findAll('td')] for tr in rows]"}, {"question": "find the index of element closest to number 11.5 in list `a`", "truth": "min(enumerate(a), key=lambda x: abs(x[1] - 11.5))"}, {"question": "display current time", "truth": "now = datetime.datetime.now().strftime('%H:%M:%S')"}, {"question": "call bash command 'tar c my_dir | md5sum' with pipe", "truth": "subprocess.call('tar c my_dir | md5sum', shell=True)"}, {"question": "match string 'this is my string' with regex '\\\\b(this|string)\\\\b'\r\nthen replace it with regex '<markup>\\\\1</markup>'", "truth": "re.sub('\\\\b(this|string)\\\\b', '<markup>\\\\1</markup>', 'this is my string')"}, {"question": "plot data of column 'index' versus column 'A' of dataframe `monthly_mean` after resetting its index", "truth": "monthly_mean.reset_index().plot(x='index', y='A')"}, {"question": "sum the length of lists in list `x` that are more than 1 item in length", "truth": "sum(len(y) for y in x if len(y) > 1)"}, {"question": "match a sharp, followed by letters (including accent characters) in string `str1` using a regex", "truth": "hashtags = re.findall('#(\\\\w+)', str1, re.UNICODE)"}, {"question": "pandas: change all the values of a column 'Date' into \"int(str(x)[-4:])\"", "truth": "df['Date'] = df['Date'].apply(lambda x: int(str(x)[-4:]))"}, {"question": "print number 1255000 as thousands separators", "truth": "locale.setlocale(locale.LC_ALL, 'en_US')\nlocale.format('%d', 1255000, grouping=True)"}, {"question": "create a list `matrix` containing 5 lists, each of 5 items  all set to 0", "truth": "matrix = [([0] * 5) for i in range(5)]"}, {"question": "get all characters in string 'foobar' up to the fourth index", "truth": "\"\"\"foobar\"\"\"[:4]"}, {"question": "declare an array `variable`", "truth": "variable = []"}, {"question": "replace only first occurence of string `TEST` from a string `longlongTESTstringTEST`", "truth": "'longlongTESTstringTEST'.replace('TEST', '?', 1)"}, {"question": "find and replace 2nd occurrence of word 'cat' by 'Bull' in a sentence 's'", "truth": "re.sub('^((.*?cat.*?){1})cat', '\\\\1Bull', s)"}, {"question": "generate all possible string permutations of each two elements in list `['hel', 'lo', 'bye']`", "truth": "print([''.join(a) for a in combinations(['hel', 'lo', 'bye'], 2)])"}, {"question": "convert binary string '01010101111' to integer", "truth": "int('01010101111', 2)"}, {"question": "get value of the environment variable 'HOME' with default value '/home/username/'", "truth": "print(os.environ.get('HOME', '/home/username/'))"}, {"question": "find element by css selector \"input[onclick*='1 Bedroom Deluxe']\"", "truth": "driver.find_element_by_css_selector(\"input[onclick*='1 Bedroom Deluxe']\")"}, {"question": "extract floating point numbers from a string 'Current Level: -13.2 db or 14.2 or 3'", "truth": "re.findall('[-+]?\\\\d*\\\\.\\\\d+|\\\\d+', 'Current Level: -13.2 db or 14.2 or 3')"}, {"question": "print list of items `myList`", "truth": "print('\\n'.join(str(p) for p in myList))"}, {"question": "extracting column `1` and `9` from array `data`", "truth": "data[:, ([1, 9])]"}, {"question": "check if any of the items in  `search` appear in `string`", "truth": "any(x in string for x in search)"}, {"question": "set an array of unicode characters `[u'\\xe9', u'\\xe3', u'\\xe2']` as labels in Matplotlib `ax`", "truth": "ax.set_yticklabels(['\\xe9', '\\xe3', '\\xe2'])"}, {"question": "convert a date string `s` to a datetime object", "truth": "datetime.datetime.strptime(s, '%Y-%m-%dT%H:%M:%SZ')"}, {"question": "find the string matches within parenthesis from a string `s` using regex", "truth": "m = re.search('\\\\[(\\\\w+)\\\\]', s)"}, {"question": "lowercase string values with key 'content' in a list of dictionaries `messages`", "truth": "[{'content': x['content'].lower()} for x in messages]"}, {"question": "sort dict `data` by value", "truth": "sorted(data, key=data.get)"}, {"question": "modify the width of a text control as `300` keeping default height in wxpython", "truth": "wx.TextCtrl(self, -1, size=(300, -1))"}, {"question": "add key value pairs 'item4' , 4 and 'item5' , 5 to dictionary `default_data`", "truth": "default_data.update({'item4': 4, 'item5': 5, })"}, {"question": "Remove anything in parenthesis from string `item` with a regex", "truth": "item = re.sub(' ?\\\\([^)]+\\\\)', '', item)"}, {"question": "sort list `['10', '3', '2']` in ascending order based on the integer value of its elements", "truth": "sorted(['10', '3', '2'], key=int)"}, {"question": "merge rows from dataframe `df1` with rows from dataframe `df2` and calculate the mean for rows that have the same value of axis 1", "truth": "pd.concat((df1, df2), axis=1).mean(axis=1)"}, {"question": "Calling an external command \"some_command < input_file | another_command > output_file\"", "truth": "os.system('some_command < input_file | another_command > output_file')"}]